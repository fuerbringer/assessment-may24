# Possible improvements

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
target_include_directories()

# part1 
main:
	include algorithm
	ptr_fun is deprecated c++11
	
speed
release build
use performance tools perf / valgrind / gperf
exponential probing -> decrease collisions -> spreads throughotu table
use buckets: hashmap within hashmap
2d table probing in y direction
use alternative data type -> binary tree for words
verschachtelt hash tables


# part2 
clean up
reduce shared state
use recursive descent parser
use implementations like SIMD JSON: Depending on needs
profile to squeeze out performance


# performance general
Do code profiling, benchmark and iterate
No unnecessary copying: Use references
Cache locality, dont use non-contiguous memory
no linked lists,  use arrays
no malloc / prealloc buffer reuse
std::move and references -> no copies
no exceptions
concurrent processes using up cpu time
use compiler like Intel C++ 
fast ram 
big CPU cache L3 
arena allocators (alloc block at once, use parts), like malloc but for a datatype
ring buffers (with pointers)



